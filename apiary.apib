FORMAT: 1A

# IPFS

The API for interacting with IPFS nodes.

The HTTP API is currently accepting all methods, so GET will work just as well as POST for any group. Because of this, the methods shown below are the specifications that should be adhered to, although any will work. For more, see this discussion: https://github.com/ipfs/go-ipfs/issues/2165.

# Group add [POST /add{?arg}{&r,p,t,n,w,H,s}]

Add a file to IPFS.

Note that directories are added recursively, to form the ipfs
MerkleDAG.

#### curl

    curl -F "file=@test" http://localhost:5001/api/v0/add

+ Parameters
    + arg (string, required) - The path to a file to be added to IPFS.
    + r (boolean, optional) - Recursive. Add directory paths recursively.
    + p (boolean, optional) - Progress. Stream progress data.
    + t (boolean, optional) - Trickle. Use trickle-dag format for dag generation.
    + n (boolean, optional) - Only-hash. Only chunk and hash - do not write to disk.
    + w (boolean, optional) - Wrap-with-directory. Wrap files with a directory object.
    + H (boolean, optional) - Hidden. Include files that are hidden.
    + s (boolean, optional) - Chunker. Chunking algorithm to use.

+ Request Single File (multipart/form-data)

    #### Curl

        curl -F "file=@test" http://localhost:5001/api/v0/add

    + Body

        ```
        curl -F "file=@test" http://localhost:5001/api/v0/add
        ```

+ Response 200 (application/json)

    Note that the response sends a 100 continuation code before a 200 code.

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Output, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Output, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Chunked-Output: 1
        Date: Fri, 08 Jan 2016 14:48:18 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes
        + Name (string)
        + Hash (Multihash)

    + Body

        ```
        {
            "Name":"test",
            "Hash":"QmePw8gVcBMb8x6kAep6aMBAX23hCSk6iZW3i9VKkiFhu1"
        }
        ```

+ Request Progress (multipart/form-data)

    #### Curl

        curl -F "file=@test" http://localhost:5001/api/v0/add?p

    + Body

        ```
        curl -F "file=@test" http://localhost:5001/api/v0/add?p
        ```

+ Response 200 (application/json)

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Chunked-Output: 1
        Date: Thu, 21 Jan 2016 14:00:51 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (ndjson)
        + Object (object)
            - Name: test/test (string)
            - Bytes: 12 (number)
        + Object (object)
            - Name: test/test (string)
            - Hash (Multihash)

    + Body

        ```
        {
          "Name": "test",
          "Bytes": 12
        }
        {
          "Name": "test",
          "Hash": "QmePw8gVcBMb8x6kAep6aMBAX23hCSk6iZW3i9VKkiFhu1"
        }
        ```

+ Request Trickle (multipart/form-data)

    #### Curl

        curl -F "file=@test" http://localhost:5001/api/v0/add?t

    + Body

        ```
        curl -F "file=@test" http://localhost:5001/api/v0/add?t
        ```

+ Response 200 (application/json)

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Chunked-Output: 1
        Date: Thu, 21 Jan 2016 14:00:51 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (ndjson)
        + Object (object)
            - Name: test/test (string)
            - Hash (Multihash)

    + Body

        ```
        {
          "Name": "test",
          "Hash": "QmePw8gVcBMb8x6kAep6aMBAX23hCSk6iZW3i9VKkiFhu1"
        }
        ```

+ Request Only Hash (multipart/form-data)

    #### Curl

        curl -F "file=@test" http://localhost:5001/api/v0/add?n

    + Body

        ```
        curl -F "file=@test" http://localhost:5001/api/v0/add?n
        ```

+ Response 200 (application/json)

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Chunked-Output: 1
        Date: Thu, 21 Jan 2016 14:00:51 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (ndjson)
        + Object (object)
            - Name: test/test (string)
            - Hash (Multihash)

    + Body

        ```
        {
          "Name": "test",
          "Bytes": 12
        }
        {
          "Name": "test",
          "Hash": "QmePw8gVcBMb8x6kAep6aMBAX23hCSk6iZW3i9VKkiFhu1"
        }
        ```

+ Request Wrap with Directory (multipart/form-data)

    #### Curl

        curl -F "file=@test" http://localhost:5001/api/v0/add?w

    + Body

        ```
        curl -F "file=@test" http://localhost:5001/api/v0/add?w
        ```

+ Response 200 (application/json)

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Chunked-Output: 1
        Date: Thu, 21 Jan 2016 14:00:51 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (ndjson)
        + Object (object)
            - Name: test/test (string)
            - Hash (Multihash)

    + Body

        ```
        {
          "Name": "test",
          "Hash": "QmePw8gVcBMb8x6kAep6aMBAX23hCSk6iZW3i9VKkiFhu1"
        }
        {
          "Name": "",
          "Hash": "QmV7sQezAjKh9pokjUPLL7ebuMF5t56UmfhK4cJncCcrNZ"
        }
        ```

+ Request Hidden (multipart/form-data)

    #### Curl

        curl -F "file=@test" http://localhost:5001/api/v0/add?H

    + Body

        ```
        curl -F "file=@test" http://localhost:5001/api/v0/add?H
        ```

+ Response 200 (application/json)

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Chunked-Output: 1
        Date: Thu, 21 Jan 2016 14:00:51 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (ndjson)
        + Object (object)
            - Name: test/test (string)
            - Hash (Multihash)

    + Body

        ```
        {
          "Name": "test",
          "Hash": "QmePw8gVcBMb8x6kAep6aMBAX23hCSk6iZW3i9VKkiFhu1"
        }
        ```

+ Request Chunker (multipart/form-data)

    #### Curl

        curl -F "file=@test" http://localhost:5001/api/v0/add?s

    + Body

        ```
        curl -F "file=@test" http://localhost:5001/api/v0/add?s
        ```

+ Response 200 (application/json)

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Chunked-Output: 1
        Date: Thu, 21 Jan 2016 14:00:51 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (ndjson)
        + Object (object)
            - Name: test/test (string)
            - Hash (Multihash)

    + Body

        ```
        {
          "Name": "test",
          "Hash": "QmePw8gVcBMb8x6kAep6aMBAX23hCSk6iZW3i9VKkiFhu1"
        }
        ```

+ Request Recursive (multipart/form-data)

+ Response 200 (application/json)

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Chunked-Output: 1
        Date: Thu, 21 Jan 2016 13:09:00 GMT
        Connection: close
        Transfer-Encoding: chunked
        ```

    + Attributes (ndjson)
        + Object (object)
            - Name: test/test (string)
            - Bytes: 12 (number)
        + Object (object)
            - Name: test/test (string)
            - Hash (Multihash)

    + Body

        ```
        {
          "Name": "test/test",
          "Bytes": 12
        }
        {
          "Name": "test/test",
          "Hash": "QmePw8gVcBMb8x6kAep6aMBAX23hCSk6iZW3i9VKkiFhu1"
        }
        {
          "Name": "test",
          "Hash": "QmV7sQezAjKh9pokjUPLL7ebuMF5t56UmfhK4cJncCcrNZ"
        }
        ```



+ Request Empty Arguments

    #### curl

        curl -i http://localhost:5001/api/v0/add

    + Body

      ```
      curl -i http://localhost:5001/api/v0/add
      ```

+ Response 400

    + Headers

        ```
        Date: Fri, 08 Jan 2016 15:22:01 GMT
        Content-Length: 32
        Content-Type: text/plain; charset=utf-8
        ```

    + Body

        ```
        File argument `path` is required
        ```

# Group bitswap

## stat

## unwant

## wantlist

# Group block

## get

## put

## stat

# Group bootstrap
Show or edit the list of bootstrap peers.

Running `ipfs bootstrap` with no arguments will run `ipfs bootstrap list`.

**Security Warning**:

The bootstrap command manipulates the `bootstrap list`, which contains
the addresses of bootstrap nodes. These are the *trusted peers* from
which to learn about other peers in the network. Only edit this list
if you understand the risks of adding or removing nodes from this list.

+ Request No Subcommands

    #### curl

         curl -i http://localhost:5001/api/v0/bootstrap

    + Body

        ```
         curl -i http://localhost:5001/api/v0/bootstrap
         ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 22:29:38 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        + Peers (array)
            - (MultiAddr)

    + Body

        ```
        {
          "Peers": [
            "/ip4/104.131.131.82/tcp/4001/ipfs/QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ",
            "/ip4/104.236.176.52/tcp/4001/ipfs/QmSoLnSGccFuZQJzRadHn95W2CrSFmZuTdDWP8HXaHca9z",
            "/ip4/104.236.179.241/tcp/4001/ipfs/QmSoLPppuBtQSGwKDZT2M73ULpjvfd3aZ6ha4oFGL1KrGM",
            "/ip4/162.243.248.213/tcp/4001/ipfs/QmSoLueR4xBeUbY9WZ9xGUUxunbKWcrNFTDAadQJmocnWm",
            "/ip4/128.199.219.111/tcp/4001/ipfs/QmSoLSafTMBsPKadTEgaXctDQVcqN88CNLHXMkTNwMKPnu",
            "/ip4/104.236.76.40/tcp/4001/ipfs/QmSoLV4Bbm51jM9C4gDYZQ9Cy3U6aXMJDAbzgu2fzaDs64",
            "/ip4/178.62.158.247/tcp/4001/ipfs/QmSoLer265NRgSp2LA3dPaeykiS1J6DifTC88f5uVQKNAd",
            "/ip4/178.62.61.185/tcp/4001/ipfs/QmSoLMeWqB7YGVLJN3pNLQpmmEk35v6wYtsMGLzSr5QBU3",
            "/ip4/104.236.151.122/tcp/4001/ipfs/QmSoLju6m7xTh3DuokvT3886QRYqxAzb1kShaanJgW36yx"
          ]
        }
        ```

## add [GET /bootstrap/add{?arg}{&default}]
Add peers to the bootstrap list.

Outputs a list of peers that were added (that weren't already
in the bootstrap list).

+ Parameters
    + arg (MultiAddr, required) - A peer to add to the bootstrap list.
    + default (boolean, optional) - Add default bootstrap nodes.

+ Request No Arguments

    #### curl

         curl -i http://localhost:5001/api/v0/bootstrap/add

    + Body

        ```
         curl -i http://localhost:5001/api/v0/bootstrap/add
         ```

+ Response 400

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 22:36:08 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "no bootstrap peers to add"
        - Code: 1

    + Body

        ```
        {
          "Message": "no bootstrap peers to add",
          "Code": 1
        }
        ```

+ Request Invalid Argument

    #### curl

         curl -i http://localhost:5001/api/v0/bootstrap/add?arg=QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ

    + Body

        ```
         curl -i http://localhost:5001/api/v0/bootstrap/add?arg=QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ
        ```

+ Response 500

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 22:39:48 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "invalid multiaddr, must begin with /"
        - Code: 0

    + Body

        ```
        {
          "Message": "invalid multiaddr, must begin with /",
          "Code": 0
        }
        ```

+ Request Empty Argument

    #### curl

         curl -i http://localhost:5001/api/v0/bootstrap/add?arg=

    + Body

        ```
         curl -i http://localhost:5001/api/v0/bootstrap/add?arg=
        ```

+ Response 500

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 22:41:16 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "invalid ipfs address"
        - Code: 0

    + Body

        ```
        {
          "Message": "invalid ipfs address",
          "Code": 0
        }
        ```

+ Request Valid Argument

    #### curl

         curl -i http://localhost:5001/api/v0/bootstrap/add?arg=/ip4/104.236.176.52/tcp/4001/ipfs/QmSoLnSGccFuZQJzRadHn95W2CrSFmZuTdDWP8HXaHca9z

    + Body

        ```
         curl -i http://localhost:5001/api/v0/bootstrap/add?arg=/ip4/104.236.176.52/tcp/4001/ipfs/QmSoLnSGccFuZQJzRadHn95W2CrSFmZuTdDWP8HXaHca9z
        ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 22:42:45 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        + Peers (array)
            - (MultiAddr)

    + Body

        ```
        {
          "Peers": [
            "/ip4/104.236.176.52/tcp/4001/ipfs/QmSoLnSGccFuZQJzRadHn95W2CrSFmZuTdDWP8HXaHca9z"
          ]
        }
        ```

+ Request Default Option

    #### curl

         curl -i http://localhost:5001/api/v0/bootstrap/add?default

    + Body

        ```
         curl -i http://localhost:5001/api/v0/bootstrap/add?default
         ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 22:38:09 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        + Peers (array)
            - (MultiAddr)

    + Body

        ```
        {
          "Peers": [
            "/ip4/104.131.131.82/tcp/4001/ipfs/QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ",
            "/ip4/104.236.176.52/tcp/4001/ipfs/QmSoLnSGccFuZQJzRadHn95W2CrSFmZuTdDWP8HXaHca9z",
            "/ip4/104.236.179.241/tcp/4001/ipfs/QmSoLPppuBtQSGwKDZT2M73ULpjvfd3aZ6ha4oFGL1KrGM",
            "/ip4/162.243.248.213/tcp/4001/ipfs/QmSoLueR4xBeUbY9WZ9xGUUxunbKWcrNFTDAadQJmocnWm",
            "/ip4/128.199.219.111/tcp/4001/ipfs/QmSoLSafTMBsPKadTEgaXctDQVcqN88CNLHXMkTNwMKPnu",
            "/ip4/104.236.76.40/tcp/4001/ipfs/QmSoLV4Bbm51jM9C4gDYZQ9Cy3U6aXMJDAbzgu2fzaDs64",
            "/ip4/178.62.158.247/tcp/4001/ipfs/QmSoLer265NRgSp2LA3dPaeykiS1J6DifTC88f5uVQKNAd",
            "/ip4/178.62.61.185/tcp/4001/ipfs/QmSoLMeWqB7YGVLJN3pNLQpmmEk35v6wYtsMGLzSr5QBU3",
            "/ip4/104.236.151.122/tcp/4001/ipfs/QmSoLju6m7xTh3DuokvT3886QRYqxAzb1kShaanJgW36yx"
          ]
        }
        ```


## list [GET /bootstrap/list]
Show peers in the bootstrap list

+ Request Without Options

    #### curl

        curl -i http://localhost:5001/api/v0/bootstrap/list

    + Body

        ```
        curl -i http://localhost:5001/api/v0/bootstrap/list
        ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 22:51:06 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        + Peers (array)
            - (MultiAddr)
    + Body

        ```
        {
          "Peers": [
            "/ip4/104.236.176.52/tcp/4001/ipfs/QmSoLnSGccFuZQJzRadHn95W2CrSFmZuTdDWP8HXaHca9z",
            "/ip4/104.131.131.82/tcp/4001/ipfs/QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ",
            "/ip4/104.236.179.241/tcp/4001/ipfs/QmSoLPppuBtQSGwKDZT2M73ULpjvfd3aZ6ha4oFGL1KrGM",
            "/ip4/162.243.248.213/tcp/4001/ipfs/QmSoLueR4xBeUbY9WZ9xGUUxunbKWcrNFTDAadQJmocnWm",
            "/ip4/128.199.219.111/tcp/4001/ipfs/QmSoLSafTMBsPKadTEgaXctDQVcqN88CNLHXMkTNwMKPnu",
            "/ip4/104.236.76.40/tcp/4001/ipfs/QmSoLV4Bbm51jM9C4gDYZQ9Cy3U6aXMJDAbzgu2fzaDs64",
            "/ip4/178.62.158.247/tcp/4001/ipfs/QmSoLer265NRgSp2LA3dPaeykiS1J6DifTC88f5uVQKNAd",
            "/ip4/178.62.61.185/tcp/4001/ipfs/QmSoLMeWqB7YGVLJN3pNLQpmmEk35v6wYtsMGLzSr5QBU3",
            "/ip4/104.236.151.122/tcp/4001/ipfs/QmSoLju6m7xTh3DuokvT3886QRYqxAzb1kShaanJgW36yx"
          ]
        }
        ```

## rm [GET /bootstrap/rm{?arg}{&all}]
Removes peers from the bootstrap list.

Outputs the list of peers that were removed.

+ Parameters
    + arg (MultiAddr, optional) - A peer to add to the bootstrap list
    + all (boolean, optional) - Remove all bootstrap peers.

+ Request Without Options

    #### curl

        curl -i http://localhost:5001/api/v0/bootstrap/rm

    + Body

        ```
        curl -i http://localhost:5001/api/v0/bootstrap/rm
        ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 23:17:18 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        + Peers: [] (array)

    + Body

        ```
        {
          "Peers": []
        }
        ```

+ Request With All

    #### curl

        curl -i http://localhost:5001/api/v0/bootstrap/rm?all

    + Body

        ```
        curl -i http://localhost:5001/api/v0/bootstrap/rm?all
        ```

+ Response 200

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 23:18:17 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        + Peers (array)
            - (MultiAddr)

    + Body

        ```
        {
          "Peers": [
            "/ip4/104.236.176.52/tcp/4001/ipfs/QmSoLnSGccFuZQJzRadHn95W2CrSFmZuTdDWP8HXaHca9z",
            "/ip4/104.131.131.82/tcp/4001/ipfs/QmaCpDMGvV2BGHeYERUEnRQAwe3N8SzbUtfsmvsqQLuvuJ",
            "/ip4/104.236.179.241/tcp/4001/ipfs/QmSoLPppuBtQSGwKDZT2M73ULpjvfd3aZ6ha4oFGL1KrGM",
            "/ip4/162.243.248.213/tcp/4001/ipfs/QmSoLueR4xBeUbY9WZ9xGUUxunbKWcrNFTDAadQJmocnWm",
            "/ip4/128.199.219.111/tcp/4001/ipfs/QmSoLSafTMBsPKadTEgaXctDQVcqN88CNLHXMkTNwMKPnu",
            "/ip4/104.236.76.40/tcp/4001/ipfs/QmSoLV4Bbm51jM9C4gDYZQ9Cy3U6aXMJDAbzgu2fzaDs64",
            "/ip4/178.62.158.247/tcp/4001/ipfs/QmSoLer265NRgSp2LA3dPaeykiS1J6DifTC88f5uVQKNAd",
            "/ip4/178.62.61.185/tcp/4001/ipfs/QmSoLMeWqB7YGVLJN3pNLQpmmEk35v6wYtsMGLzSr5QBU3",
            "/ip4/104.236.151.122/tcp/4001/ipfs/QmSoLju6m7xTh3DuokvT3886QRYqxAzb1kShaanJgW36yx"
          ]
        }
        ```

+ Request With Empty Argument

    #### curl

        curl -i http://localhost:5001/api/v0/bootstrap/rm?arg=

    + Body

        ```
        curl -i http://localhost:5001/api/v0/bootstrap/rm?arg=
        ```

+ Response 500

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 23:20:35 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "invalid ipfs address"
        - Code: 0

    + Body

        ```
        {
          "Message": "invalid ipfs address",
          "Code": 0
        }
        ```

+ Request With Invalid Argument

    #### curl

        curl -i http://localhost:5001/api/v0/bootstrap/rm?arg=invalid

    + Body

        ```
        curl -i http://localhost:5001/api/v0/bootstrap/rm?arg=invalid
        ```

+ Response 500

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 23:21:26 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "invalid multiaddr, must begin with /"
        - Code: 0

    + Body

        ```
        {
          "Message": "invalid multiaddr, must begin with /",
          "Code": 0
        }
        ```

+ Request With Valid Argument

    #### curl

        curl -i http://localhost:5001/api/v0/bootstrap/rm?arg=/ip4/104.236.176.52/tcp/4001/ipfs/QmSoLnSGccFuZQJzRadHn95W2CrSFmZuTdDWP8HXaHca9z

    + Body

        ```
        curl -i http://localhost:5001/api/v0/bootstrap/rm?arg=/ip4/104.236.176.52/tcp/4001/ipfs/QmSoLnSGccFuZQJzRadHn95W2CrSFmZuTdDWP8HXaHca9z
        ```

+ Response 200 (application/json)

    + Headers

        ```
        Access-Control-Allow-Headers: X-Stream-Ouptut, X-Chunked-Output
        Access-Control-Expose-Headers: X-Stream-Ouptut, X-Chunked-Output
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Fri, 29 Jan 2016 23:22:34 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        + Peers (array)
            - (Multihash)

    + Body

        ```
        {
          "Peers": []
        }
        ```

# Group cat

# Group commands

# Group config

## edit

## replace

## show

# Group daemon

# Group dht

## findpeer

## findprovs

## get

## put

## query

# Group diag

## net

## sys

# Group dns

# Group file

## ls

# Group get

# Group id

# Group init

# Group log

## level

## tail

# Group ls

# Group mount

# Group name

## publish

## resolve

# Group object
Interact with ipfs objects.

`ipfs object` is a plumbing command used to manipulate DAG objects
directly.

## object [GET /object]

+ Request Without Subcommands

    #### curl

        curl -i http://localhost:5001/api/v0/object

    + Body

        curl -i http://localhost:5001/api/v0/object

+ Response 400

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Wed, 03 Feb 2016 19:02:10 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "This command can't be called directly. Try one of its subcommands."
        - Code: 1

    + Body

        ```
        {
          "Message": "This command can't be called directly. Try one of its subcommands.",
          "Code": 1
        }
        ```

## data [GET /object/data{?arg}]
Outputs the raw bytes in an IPFS object.

+ Parameters
    + arg (required, string) - Key of the object to retrieve, in base58-encoded multihash format


+ Request Without Arguments

    #### curl

        curl -i http://localhost:5001/api/v0/object/data

    + Body

        ```
        curl -i http://localhost:5001/api/v0/object/data
        ```

+ Response 400

    + Headers

        ```
        Date: Wed, 03 Feb 2016 19:09:38 GMT
        Content-Length: 26
        Content-Type: text/plain; charset=utf-8
        ```

    + Body

        ```
        Argument 'key' is required
        ```


+ Request With Empty Argument

    #### curl

        curl -i "http://localhost:5001/api/v0/object/data?arg="

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/object/data?arg="
        ```

+ Response 500

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Wed, 03 Feb 2016 20:50:57 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "invalid ipfs ref path"
        - Code: 0

    + Body

        ```
        {
          "Message": "invalid ipfs ref path",
          "Code": 0
        }
        ```

+ Request With Invalid Argument

    #### curl

        curl -i "http://localhost:5001/api/v0/object/data?arg=kitten"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/object/data?arg=kitten"
        ```

+ Response 500

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Wed, 03 Feb 2016 20:50:57 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "invalid ipfs ref path"
        - Code: 0

    + Body

        ```
        {
          "Message": "invalid ipfs ref path",
          "Code": 0
        }
        ```

+ Request With Argument

    #### curl

        curl -i "http://localhost:5001/api/v0/object/data?arg=QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/object/data?arg=QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ"
        ```

+ Response 200

    + Headers

        ```
        Content-Type: text/plain
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        X-Stream-Output: 1
        Date: Wed, 03 Feb 2016 20:52:12 GMT
        Transfer-Encoding: chunked
        ```
    + Attributes

    + Body

        ```
        ```

## get [GET /object/get{?arg}{&encoding}]
Get and serialize the DAG node named by <key>

+ Parameters
    + arg (string, required) - Key of the object to retrieve (in base58-encoded multihash format)
    + encoding (enum[string], optional) - Serializes the DAG node to the format specified. Alias: `enc`.
        + Default: `json`
        + Members
            + `json`
            + `protobuf`
            + `xml`

+ Request Without Arguments

    #### curl

        curl -i "http://localhost:5001/api/v0/object/get"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/object/get"
        ```

+ Response 400

    + Headers

        ```
        Date: Wed, 03 Feb 2016 20:58:03 GMT
        Content-Length: 26
        Content-Type: text/plain; charset=utf-8
        ```

    + Attributes

    + Body

        ```
        Argument 'key' is required
        ```

+ Request With Empty Argument

    This, and all calls with options, has the same response as it would if an invalid argument is supplied.
    For the sake of brevity, only this call is listed here.

    #### curl

        curl -i "http://localhost:5001/api/v0/object/get?arg="

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/object/get?arg="
        ```

+ Response 500

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Wed, 03 Feb 2016 20:58:32 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "invalid ipfs ref path"
        - Code: 0

    + Body

        ```
        {
          "Message": "invalid ipfs ref path",
          "Code": 0
        }
        ```

+ Request With Invalid Argument

    #### curl

        curl -i "http://localhost:5001/api/v0/object/get?arg=kitten"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/object/get?arg=kitten"
        ```

+ Response 500

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Wed, 03 Feb 2016 20:58:32 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "invalid ipfs ref path"
        - Code: 0

    + Body

        ```
        {
          "Message": "invalid ipfs ref path",
          "Code": 0
        }
        ```

+ Request With Invalid Argument And XML Encoding

    #### curl

        curl -i "http://localhost:5001/api/v0/object/get?arg=kitten&encoding=xml"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/object/get?arg=kitten&encoding=xml"
        ```

+ Response 500

    + Headers

        ```
        Content-Type: application/xml
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Wed, 03 Feb 2016 20:58:32 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (string)

    + Body

        ```
        <Error><Message>invalid ipfs ref path</Message><Code>0</Code></Error>
        ```

+ Request With Invalid Argument And Protobuf Encoding

    #### Bugs

    This comes up with a 200 with no response.

    #### curl

        curl -i "http://localhost:5001/api/v0/object/get?arg=kitten&encoding=protobuf"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/object/get?arg=kitten&encoding=protobuf"
        ```

+ Response 200

    + Headers

        ```
        Date: Wed, 03 Feb 2016 21:12:39 GMT
        Content-Length: 0
        Content-Type: text/plain; charset=utf-8
        ```

    + Attributes

    + Body

        ```
        ```

+ Request With Argument

    This is the same response as if `encoding=json` were added to the request.

    #### curl

        curl -i "http://localhost:5001/api/v0/object/get?arg=QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/object/get?arg=QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ"
        ```

+ Response 200

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Wed, 03 Feb 2016 20:59:26 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        + Links (array)
            - (object)
                - Name: "cat.jpg" (string)
                - Hash (Multihash)
                - Size: 443362 (number)
        + Data: "\u0008\u0001" (string)

    + Body

        ```
        {
          "Links": [
            {
              "Name": "cat.jpg",
              "Hash": "Qmd286K6pohQcTKYqnS1YhWrCiS4gz7Xi34sdwMe9USZ7u",
              "Size": 443362
            }
          ],
          "Data": "\u0008\u0001"
        }
        ```

+ Request With Argument And XML Encoding

    #### curl

        curl -i "http://localhost:5001/api/v0/object/get?arg=QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ&encoding=xml"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/object/get?arg=QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ&encoding=xml"
        ```

+ Response 200

    + Headers

        ```
        Content-Type: application/xml
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Wed, 03 Feb 2016 20:59:26 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (string)

    + Body

        ```
        <Node><Links><Name>cat.jpg</Name><Hash>Qmd286K6pohQcTKYqnS1YhWrCiS4gz7Xi34sdwMe9USZ7u</Hash><Size>443362</Size></Links><Data>��</Data></Node>
        ```

+ Request With Argument And Protobuf Encoding

    #### Bugs

    Note that the `Content-Type` is still specified as `application/json`, although it is a protobuf response.

    #### curl

        curl -i "http://localhost:5001/api/v0/object/get?arg=QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ&encoding=protobuf"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/object/get?arg=QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ&encoding=protobuf"
        ```

+ Response 200

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Wed, 03 Feb 2016 20:59:26 GMT
        Transfer-Encoding: chunked
        ```
    + Body

        ```
        1
        "  :^Ep\|.t|dUcat.jpg
        ```

## links [GET /object/links{?arg}]
Outputs the links pointed to by the specified object

#### Bugs

While `encoding` is not specified in the API, it can be applied to return an `xml`
encoded object. However, unlike with `data`, `protobuf` will 500.

+ Parameters
    + arg (string, required) - Key of the object to retrieve, in base58-encoded multihash format

+ Request Without Arguments

    #### curl

        curl -i "http://localhost:5001/api/v0/object/links"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/object/links"
        ```

+ Response 400

    + Headers

        ```
        Date: Wed, 03 Feb 2016 21:34:30 GMT
        Content-Length: 26
        Content-Type: text/plain; charset=utf-8
        ```

    + Attributes (string)

    + Body

        ```
        Argument 'key' is required
        ```

+ Request With Empty Argument

    #### curl

        curl -i "http://localhost:5001/api/v0/object/links?arg="

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/object/links?arg="
        ```

+ Response 500

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Wed, 03 Feb 2016 21:34:52 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "invalud ipfs ref path"
        - Code: 0

    + Body

        ```
        {
          "Message": "invalid ipfs ref path",
          "Code": 0
        }
        ```

+ Request With Invalid Argument

    #### curl

        curl -i "http://localhost:5001/api/v0/object/links?arg="

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/object/links?arg="
        ```

+ Response 500

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Wed, 03 Feb 2016 21:34:52 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "invalud ipfs ref path"
        - Code: 0

    + Body

        ```
        {
          "Message": "invalid ipfs ref path",
          "Code": 0
        }
        ```

+ Request With Argument

    #### curl

        curl -i "http://localhost:5001/api/v0/object/links?arg=QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/object/links?arg=QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ"
        ```

+ Response 200

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Wed, 03 Feb 2016 21:35:55 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        - Hash (Multihash)
        + Links (array)
            + (object)
                - Name: "cat.jpg" (string)
                - Hash (Multihash)
                - Size: 443362 (number)

    + Body

        ```
        {
          "Hash": "QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ",
          "Links": [
            {
              "Name": "cat.jpg",
              "Hash": "Qmd286K6pohQcTKYqnS1YhWrCiS4gz7Xi34sdwMe9USZ7u",
              "Size": 443362
            }
          ]
        }
        ```

+ Request With Argument And XML Encoding

    #### curl

        curl -i "http://localhost:5001/api/v0/object/links?arg=QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ&encoding=xml"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/object/links?arg=QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ&encoding=xml"
        ```

+ Response 200

    + Headers

        ```
        Content-Type: application/xml
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Wed, 03 Feb 2016 21:35:55 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (string)

    + Body

        ```
        <Object><Hash>QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ</Hash><Links><Name>cat.jpg</Name><Hash>Qmd286K6pohQcTKYqnS1YhWrCiS4gz7Xi34sdwMe9USZ7u</Hash><Size>443362</Size></Links></Object>
        ```

+ Request With Argument And Protobuf Encoding

    #### curl

        curl -i "http://localhost:5001/api/v0/object/links?arg=QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ&encoding=protobuf"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/object/links?arg=QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ&encoding=protobuf"
        ```

+ Response 500

    + Headers

        ```
        Content-Type: text/plain; charset=utf-8
        X-Content-Type-Options: nosniff
        Date: Wed, 03 Feb 2016 21:38:54 GMT
        Content-Length: 49
        ```

    + Attributes (string)

    + Body

        ```
        No marshaller found for encoding type 'protobuf'
        ```

## new [GET /object/new{?arg}]
Creates a new object from an ipfs template

By default it creates and returns a new empty merkledag node, but
you may pass an optional template argument to create a preformatted
node.

#### Bugs

Encoding is not specified in the IPFS CLI man pages, and `protobuf` is not available.

+ Parameters
    + arg (enum[string], optional) - Template used to create a prefomatted node.
        + Members
            - unixfs-dir
    + encoding (enum[string], optional) - Encoding format for response.
        + Members
            - xml
            - json

+ Request Without Arguments

    #### curl

        curl -i "http://localhost:5001/api/v0/object/new"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/object/new"
        ```

+ Response 200

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Thu, 04 Feb 2016 14:45:06 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        - Hash (Multihash)
        - Links () - // TODO What format is this?

    + Body

        ```
        {
          "Hash": "QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n",
          "Links": null
        }
        ```

+ Request With Empty Argument

    The response is identical to a command with an invalid argument. For example:

        curl -i "http://localhost:5001/api/v0/object/new?arg=kitten"

    #### curl

        curl -i "http://localhost:5001/api/v0/object/new?arg="

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/object/new?arg="
        ```

+ Response 500

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Thu, 04 Feb 2016 14:50:39 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "template '' not found"
        - Code: 0

    + Body

        ```
        {
          "Message": "template '' not found",
          "Code": 0
        }
        ```

+ Request With Argument

    #### curl

        curl -i "http://localhost:5001/api/v0/object/new?arg=unixfs-dir"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/object/new?arg=unixfs-dir"
        ```

+ Response 200

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Thu, 04 Feb 2016 14:52:31 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        - Hash (Multihash)
        - Links () - // TODO What should this be?

    + Body

        ```
        {
          "Hash": "QmUNLLsPACCz1vLxQVkXqqLX5R1X345qqfHbsf67hvA3Nn",
          "Links": null
        }
        ```

+ Request With Argument And XML Encoding

    #### curl

        curl -i "http://localhost:5001/api/v0/object/new?arg=unixfs-dir&encoding=xml"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/object/new?arg=unixfs-dir&encoding=xml"
        ```

+ Response 200

    + Headers

        ```
        Content-Type: application/xml
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Thu, 04 Feb 2016 14:52:31 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (string)

    + Body

        ```
        <Object><Hash>QmUNLLsPACCz1vLxQVkXqqLX5R1X345qqfHbsf67hvA3Nn</Hash></Object>
        ```

## put [GET /object/put{?arg}{&inputenc}]
Stores input as a DAG object, outputs its key

+ Parameters
    + arg (string, required) - Data to be stored as a DAG object
    + inputenc (enum[string], optional) - Encoding type of input data
        + Default: `json`
        + Members
            + `protobuf`
            + `json`

+ Request Without Arguments

    #### curl

        curl -i "http://localhost:5001/api/v0/object/put"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/object/put"
        ```

+ Response 400

    + Headers

        ```
        Date: Thu, 04 Feb 2016 15:50:59 GMT
        Content-Length: 32
        Content-Type: text/plain; charset=utf-8
        ```

    + Attributes (string)

    + Body

        ```
        File argument 'data' is required
        ```

+ Request With Empty Argument

        The response is identical to a command with an invalid argument. For example:

        curl -i "http://localhost:5001/api/v0/object/put?arg=kitten"

    #### curl

        curl -i "http://localhost:5001/api/v0/object/put?arg="

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/object/put?arg="
        ```

+ Response 400

    + Headers

        ```
        Date: Thu, 04 Feb 2016 15:50:59 GMT
        Content-Length: 32
        Content-Type: text/plain; charset=utf-8
        ```

    + Attributes (string)

    + Body

        ```
        File argument 'data' is required
        ```

+ Request With Argument

    This assumes that 'test' is a file that is correctly-coded JSON with a 'Data' field, like so:

        ```
        {
            "Data": "hello world"
        }
        ```

    #### curl

        curl -i -X POST -F "data=@test" "http://localhost:5001/api/v0/object/put"

    + Body

        ```
        curl -i -X POST -F "data=@test" "http://localhost:5001/api/v0/object/put"
        ```

+ Response 200

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Thu, 04 Feb 2016 16:42:42 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (object)
        - Hash (Multihash)
        - Links (array, nullable)

    + Body

        ```
        {
          "Hash": "QmU1Sq1B7RPQD2XcQNLB58qJUyJffVJqihcxmmN1STPMxf",
          "Links": []
        }
        ```

+ Request With Argument And Inputenc Option

    This assumes that 'test' is a file that is correctly-coded JSON with a 'Data' field, like so:

        ```
        {
            "Data": "hello world"
        }
        ```

    #### Bugs

    This ought to work. But it does not. TODO: Fix.

    #### curl

        curl -i -X POST -F "data=@test" "http://localhost:5001/api/v0/object/put&inputenc=json"

    + Body

        ```
        curl -i -X POST -F "data=@test" "http://localhost:5001/api/v0/object/put&inputenc=json"
        ```

+ Response 400

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Thu, 04 Feb 2016 17:11:57 GMT
        Connection: close
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "This command can't be called directly. Try one of its subcommands."
        - Code: 1

    + Body

        ```
        {
          "Message": "This command can't be called directly. Try one of its subcommands.",
          "Code": 1
        }
        ```

## stat [GET /object/stat{?arg}]
Get stats for the DAG node named by <key>.

'ipfs object stat' is a plumbing command to print DAG node statistics.

+ Parameters
    + arg (string, required) - Key of the object to retrieve (in base58-encoded multihash format)

+ Request Without Arguments

    #### curl

        curl -i "http://localhost:5001/api/v0/object/stat"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/object/stat"
        ```

+ Response 400

    + Headers

        ```
        Date: Thu, 04 Feb 2016 17:15:20 GMT
        Content-Length: 26
        Content-Type: text/plain; charset=utf-8
        ```

    + Attributes (string)

    + Body

        ```
        Argument 'key' is required
        ```

+ Request With Empty Argument

    The response is identical to a command with an invalid argument. For example:

        curl -i "http://localhost:5001/api/v0/object/stat?arg=kitten"

    #### curl

        curl -i "http://localhost:5001/api/v0/object/stat?arg="

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/object/stat?arg="
        ```

+ Response 500

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Thu, 04 Feb 2016 17:15:45 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes (Error)
        - Message: "invalid ipfs ref path"
        - Code: 0

    + Body

        ```
        {
          "Message": "invalid ipfs ref path",
          "Code": 0
        }
        ```

+ Request With Argument

    #### curl

        curl -i "http://localhost:5001/api/v0/object/stat?arg=QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ"

    + Body

        ```
        curl -i "http://localhost:5001/api/v0/object/stat?arg=QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ"
        ```

+ Response 200

    + Headers

        ```
        Content-Type: application/json
        Trailer: X-Stream-Error
        Transfer-Encoding: chunked
        Date: Thu, 04 Feb 2016 17:20:58 GMT
        Transfer-Encoding: chunked
        ```

    + Attributes
        - `Hash`: "QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ" (Multihash) - number of links in link table
        - `NumLinks`: 1 (number) - number of links in link table
        - `BlockSize`: 53 (number) - size of the raw, encoded data
        - `LinksSize`: 53 (number) - size of the links segment
        - `DataSize`: 2 (number) - size of the data segment
        - `CumulativeSize`: 443417 (number) - cumulative size of object and its references

    + Body

        ```
        {
          "Hash": "QmW2WQi7j6c7UgJTarActp7tDNikE4B2qXtFCfLPdsgaTQ",
          "NumLinks": 1,
          "BlockSize": 55,
          "LinksSize": 53,
          "DataSize": 2,
          "CumulativeSize": 443417
        }
        ```

# Group pin

## add

## ls

## rm

# Group ping

# Group refs

## local

# Group repo

## gc

# Group resolve

# Group stats

## bw

# Group swarm

## addrs

### `swarm addrs local`

## connect

## disconnect

## filters

### `swarm filters add`

### `swarm filters rm`

## peers

# Group tar

## add

## cat

# Group tour

## list

## next

## restart

# Group update

# Group version

# Data Structures

## Error (object)

The IPFS error object

+ message (string) - the error message
+ code (enum[int]) - the status code
    + Members
        + `0`
        + `1`

## ndjson (object)

Newline delimited JSON

### Sample

  ```
  {
    "Name": "test/test",
    "Bytes": 12
  }
  {
    "Name": "test/test",
    "Hash": "QmePw8gVcBMb8x6kAep6aMBAX23hCSk6iZW3i9VKkiFhu1"
  }
  {
    "Name": "test",
    "Hash": "QmV7sQezAjKh9pokjUPLL7ebuMF5t56UmfhK4cJncCcrNZ"
  }
  ```

## Multihash (string)
An hash as defined [here](https://github.com/jbenet/multihash)

### Sample

  `QmNjRVohhWBX31EoaAXkrj5mPF9vQNcTVvQgWHNwdxweCN`


## SwarmAddrs (object)
A list of swarm addresses.

### Sample

  ```
  "QmNRCEwFMgCcbjNk5bFud9oqjJduvjBNbkiM8SuxuLh3GS": [
    "/ip4/127.0.0.1/tcp/4001",
    "/ip4/172.17.42.1/tcp/4001",
    "/ip4/192.168.2.3/tcp/4001",
    "/ip6/::1/tcp/4001"
  ],
  "QmNRV7kyUxYaQ4KQxFXPYm8EfuzJbtGn1wSFenjXL6LD8y": [
    "/ip4/127.0.0.1/tcp/4001",
    "/ip4/172.17.42.1/tcp/4001",
    "/ip4/5.9.33.222/tcp/4001",
    "/ip6/2a01:4f8:161:124a::1337:cafe/tcp/4001",
    "/ip6/2a01:4f8:161:124a::2/tcp/4001",
    "/ip6/::1/tcp/4001",
    "/ip6/fcfc:762a:e12a:245d:8e5b:6a40:f65:acab/tcp/4001"
  ]
  ```


## MultiAddr (string)
A multiaddr as defined [here](https://github.com/jbenet/multiaddr).

### Sample

  `/ip6/fcfc:762a:e12a:245d:8e5b:6a40:f65:acab/tcp/4001`
